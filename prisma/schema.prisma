generator client {
  provider = "prisma-client-js"
  schemas  = ["public"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String           @id @default(cuid())
  email           String           @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  role            UserType?
  userId          String           @unique
  businessProfile BusinessProfile?
  creatorProfile  CreatorProfile?
}

model BusinessProfile {
  id                     String                   @id @default(cuid())
  userId                 String                   @unique
  companyName            String
  industry               String
  description            String
  country                String
  state                  String
  city                   String
  address                String
  postalCode             String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  user                   User                     @relation(fields: [userId], references: [id])
  PartnershipOpportunity PartnershipOpportunity[]
}

model CreatorProfile {
  id           String        @id @default(cuid())
  userId       String        @unique
  fullName     String
  contentNiche String
  description  String
  country      String
  state        String
  city         String
  address      String
  postalCode   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Application  Application[]
  user         User          @relation(fields: [userId], references: [id])
}

model PartnershipOpportunity {
  id           String            @id @default(cuid())
  businessId   String
  title        String
  description  String
  status       OpportunityStatus
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  applications Application[]
  business     BusinessProfile   @relation(fields: [businessId], references: [id])
}

model Application {
  id            String                 @id @default(cuid())
  opportunityId String
  creatorId     String
  status        ApplicationStatus
  submittedAt   DateTime               @default(now())
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  creator       CreatorProfile         @relation(fields: [creatorId], references: [id])
  opportunity   PartnershipOpportunity @relation(fields: [opportunityId], references: [id])
}

enum UserType {
  BUSINESS
  CREATOR
}

enum OpportunityStatus {
  OPEN
  CLOSED
  MATCHED
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
